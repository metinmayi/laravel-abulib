name: Laravel

permissions:
  contents: write

on:
  push:
    branches:
      - '**'          # Run on all branches
  pull_request:
    branches:
      - main

jobs:
  translations:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Run translation extraction
        run: php extract_translations.php
        env:
          DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Commit and push localized files
        run: |
          git add resources/lang/*.json
          if git diff --cached --quiet; then
            echo "âœ… No translation changes to commit."
          else
            git commit -m "ðŸ¤– Auto-update translations"
            git push
          fi

  laravel-tests:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: laravel_test
      DB_USERNAME: root
      DB_PASSWORD: root

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Update composer
        run: composer update

      - name: Install composer dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --verbose

      - name: Install NPM dependencies
        run: npm ci

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Build assets
        run: npm run build

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 -P 3306 -uroot -proot && break
            echo "Waiting for MySQL..."
            sleep 1
          done

      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        run: composer checks
